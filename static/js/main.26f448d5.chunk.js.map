{"version":3,"sources":["logo2.png","components/DisplayTable.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayTable","data","repositories","className","name","avatar_url","src","alt","location","bio","map","repo","href","html_url","target","Profile","useState","setData","username","setUsername","setRepositories","submitHandler","e","a","preventDefault","fetch","profile","json","profilejson","repos_url","repoJson","console","log","style","padding","placeholder","type","value","onChange","onClick","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,G,MAAA,IAA0B,mC,mDCkD1BA,EAhDM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC5B,OACE,wBAAOC,UAAU,kBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,0CACA,qCACA,mDAGJ,gCACE,+BACE,6BAAKF,EAAKG,OACV,6BACIH,EAAKI,WAGL,qBACEF,UAAU,0BACVG,IAAKL,EAAKI,WACVE,IAAKN,EAAKI,aALZ,MASJ,6BAAKJ,EAAKO,WACV,6BAAKP,EAAKQ,MACV,6BACGP,EAAaQ,KAAI,SAAAC,GAAI,OACpB,qBAAKR,UAAU,0BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,qCACb,qBAAKA,UAAU,UAAf,SACE,mBAAGS,KAAMD,EAAKE,SAAUV,UAAU,SAASW,OAAO,SAAlD,SACGH,EAAKP,aALgCO,EAAKP,oBCgBlDW,EA7CC,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOd,EAAP,KAAqBkB,EAArB,KAKMC,EAAa,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,SAGIC,MAAM,+BAAD,OAAgCP,IAHzC,cAGZQ,EAHY,gBAIQA,EAAQC,OAJhB,cAIZC,EAJY,gBAKSH,MAAMG,EAAYC,WAL3B,cAKZ3B,EALY,iBAMKA,EAAayB,OANlB,QAMZG,EANY,OAOlBC,QAAQC,IAAIF,GAERF,IACAX,EAAQW,GACRR,EAAgBU,IAXF,4CAAH,sDAenB,OACI,mCACI,qBAAK3B,UAAW,MAAM8B,MAAO,CAAEC,QAAS,IAAxC,SACI,sBAAK/B,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,gBAEb,uBACIA,UAAU,SACVgC,YAAY,2BACZC,KAAK,OAAOC,MAAOnB,EAAUoB,SA7B7B,SAAAhB,GACpBH,EAAYG,EAAER,OAAOuB,aA8BT,yBAAQlC,UAAU,oBAAoBiC,KAAM,SAASG,QAASlB,EAA9D,UACI,mBAAGlB,UAAU,gBADjB,YAIA,cAAC,EAAD,CAAcF,KAAQA,EAAMC,aAAgBA,YCzBjDsC,MAXf,WACE,OACE,sBAAKrC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKG,IAAKmC,EAAMtC,UAAU,WAAWI,IAAI,WAE3C,cAAC,EAAD,QCASmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.26f448d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo2.285ac67f.png\";","import React from \"react\";\r\n\r\nconst DisplayTable = ({ data, repositories }) => {\r\n  return (\r\n    <table className=\"ui celled table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Avatar</th>\r\n          <th>Location</th>\r\n          <th>Bio</th>\r\n          <th>Repositories</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{data.name}</td>\r\n          <td>\r\n            {!data.avatar_url ? (\r\n              \" \"\r\n            ) : (\r\n              <img\r\n                className=\"ui small circular image\"\r\n                src={data.avatar_url}\r\n                alt={data.avatar_url}\r\n              />\r\n            )}\r\n          </td>\r\n          <td>{data.location}</td>\r\n          <td>{data.bio}</td>\r\n          <td>\r\n            {repositories.map(repo => (\r\n              <div className=\"ui relaxed divided list\" key={repo.name}>\r\n                <div className=\"item\">\r\n                  <i className=\"large github middle aligned icon\"></i>\r\n                  <div className=\"content\">\r\n                    <a href={repo.html_url} className=\"header\" target=\"_blank\">\r\n                      {repo.name}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DisplayTable;\r\n","import React, { useState } from 'react'\r\nimport DisplayTable from './DisplayTable';\r\n\r\nconst Profile = () => {\r\n    const [data, setData] = useState({});\r\n    const [username, setUsername] = useState(\"\");\r\n    const [repositories, setRepositories] = useState([]);\r\n    const onChangeHandler = e => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault();\r\n\r\n        const profile = await fetch(`http://api.github.com/users/${username}`);\r\n        const profilejson = await profile.json();\r\n        const repositories = await fetch(profilejson.repos_url);\r\n        const repoJson = await repositories.json();\r\n        console.log(repoJson);\r\n        //   console.log(profilejson);\r\n        if (profilejson) {\r\n            setData(profilejson);\r\n            setRepositories(repoJson);\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className =\"sty\" style={{ padding: 20 }}>\r\n                <div className=\"ui search\">\r\n                    <div className=\"ui icon input\">\r\n                        <i className=\"search icon\">\r\n                        </i>\r\n                        <input\r\n                            className=\"prompt\"\r\n                            placeholder=\"Search Username here....\"\r\n                            type=\"text\" value={username} onChange={onChangeHandler} />\r\n                    </div>\r\n                    <button className=\"ui primary button\" type =\"button\" onClick={submitHandler} >\r\n                        <i className=\"github icon\"></i>\r\n                        Search\r\n                    </button>\r\n                    <DisplayTable data = {data} repositories = {repositories}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nexport default Profile","import React from \"react\";\nimport logo from \"./logo2.png\";\nimport \"./App.css\";\nimport \"./style.css\";\nimport Profile from \"./components/Profile\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <Profile/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}